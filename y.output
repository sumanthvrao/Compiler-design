Terminals unused in grammar

   COLON
   FOR
   SUBPREFIX
   ADDRIGHT
   SUBRIGHT
   MULRIGHT
   DIVRIGHT
   ADDPREFIX


Grammar

    0 $accept: PreProcessorDirectives $end

    1 PreProcessorDirectives: HASH INCLUDE LIBRARY Global

    2 Main: INT MAIN OB CB CompoundStmt Function '$'

    3 Identifier: ID Array

    4 Array: '[' NUM ']'
    5      | '[' ']'
    6      | %empty

    7 CompoundStmt: SO Stmt SC

    8 Global: FunctionDefinition Global
    9       | GlobeDeclaration Global
   10       | Main

   11 GlobeDeclaration: Type VarList SEMICOLON
   12                 | Type GlobeAssignExpr

   13 GlobeAssignExpr: Identifier EQUAL Extra SEMICOLON

   14 FunctionDefinition: FunctionName OB CB SEMICOLON
   15                   | FunctionName OB ParamsType CB SEMICOLON

   16 FunctionName: Type Identifier

   17 ParamsType: ParamsType COMMA Type
   18           | Type

   19 Stmt: Declaration
   20     | AssignExpr
   21     | SelectionStmt
   22     | JumpStmt
   23     | FunctionCall
   24     | CompoundStmt
   25     | Declaration Stmt
   26     | AssignExpr Stmt
   27     | SelectionStmt Stmt
   28     | JumpStmt Stmt
   29     | FunctionCall Stmt
   30     | CompoundStmt Stmt
   31     | Iterative Stmt
   32     | error SEMICOLON

   33 Iterative: WHILE OB cond CB CompoundStmt
   34          | DO CompoundStmt WHILE OB cond CB SEMICOLON

   35 Function: FunctionName OB CB CompoundStmt Function
   36         | FunctionName OB FunctionParams CB CompoundStmt Function
   37         | %empty

   38 FunctionParams: FunctionParams COMMA Type Identifier
   39               | Type Identifier

   40 Declaration: Type Identifier
   41            | Type VarList SEMICOLON
   42            | Type AssignExpr

   43 FunctionCall: Call OB VarList CB SEMICOLON

   44 Call: ID

   45 AssignExpr: Identifier EQUAL Extra COMMA AssignExpr
   46           | Identifier EQUAL Extra SEMICOLON

   47 SelectionStmt: IF OB cond CB CompoundStmt
   48              | IF OB cond CB CompoundStmt ELSE CompoundStmt

   49 cond: Expr
   50     | Expr logOp E

   51 Expr: relExp
   52     | logExp

   53 logOp: BINARYAND
   54      | BINARYOR

   55 relExp: Extra LT E
   56       | Extra GT E
   57       | Extra LTE E
   58       | Extra GTE E
   59       | Extra NE E
   60       | Extra EQ E

   61 logExp: Extra BINARYOR E
   62       | Extra BINARYAND E

   63 Extra: E

   64 Type: INT
   65     | VOID
   66     | CHAR

   67 VarList: VarList COMMA Call
   68        | Identifier

   69 E: E ADD T
   70  | E SUB T
   71  | T

   72 T: T MUL F
   73  | T DIV F
   74  | F

   75 F: ID
   76  | NUM
   77  | OB E CB

   78 JumpStmt: CONT SEMICOLON
   79         | BRK SEMICOLON
   80         | RTRN Extra SEMICOLON


Terminals, with rules where they appear

$end (0) 0
'$' (36) 2
'[' (91) 4 5
']' (93) 4 5
error (256) 32
INT (258) 2 64
MAIN (259) 2
OB (260) 2 14 15 33 34 35 36 43 47 48 77
CB (261) 2 14 15 33 34 35 36 43 47 48 77
SO (262) 7
SC (263) 7
COLON (264)
HASH (265) 1
INCLUDE (266) 1
LIBRARY (267) 1
IF (268) 47 48
ELSE (269) 48
DO (270) 34
WHILE (271) 33 34
FOR (272)
CONT (273) 78
BRK (274) 79
RTRN (275) 80
SEMICOLON (276) 11 13 14 15 32 34 41 43 46 78 79 80
BINARYOR (277) 54 61
BINARYAND (278) 53 62
LT (279) 55
GT (280) 56
LTE (281) 57
GTE (282) 58
NE (283) 59
EQ (284) 60
VOID (285) 65
CHAR (286) 66
COMMA (287) 17 38 45 67
EQUAL (288) 13 45 46
SUBPREFIX (289)
NUM (290) 4 76
ID (291) 3 44 75
ADD (292) 69
SUB (293) 70
MUL (294) 72
DIV (295) 73
ADDRIGHT (296)
SUBRIGHT (297)
MULRIGHT (298)
DIVRIGHT (299)
ADDPREFIX (300)
IFX (301)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
PreProcessorDirectives (51)
    on left: 1, on right: 0
Main (52)
    on left: 2, on right: 10
Identifier (53)
    on left: 3, on right: 13 16 38 39 40 45 46 68
Array (54)
    on left: 4 5 6, on right: 3
CompoundStmt (55)
    on left: 7, on right: 2 24 30 33 34 35 36 47 48
Global (56)
    on left: 8 9 10, on right: 1 8 9
GlobeDeclaration (57)
    on left: 11 12, on right: 9
GlobeAssignExpr (58)
    on left: 13, on right: 12
FunctionDefinition (59)
    on left: 14 15, on right: 8
FunctionName (60)
    on left: 16, on right: 14 15 35 36
ParamsType (61)
    on left: 17 18, on right: 15 17
Stmt (62)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right: 7
    25 26 27 28 29 30 31
Iterative (63)
    on left: 33 34, on right: 31
Function (64)
    on left: 35 36 37, on right: 2 35 36
FunctionParams (65)
    on left: 38 39, on right: 36 38
Declaration (66)
    on left: 40 41 42, on right: 19 25
FunctionCall (67)
    on left: 43, on right: 23 29
Call (68)
    on left: 44, on right: 43 67
AssignExpr (69)
    on left: 45 46, on right: 20 26 42 45
SelectionStmt (70)
    on left: 47 48, on right: 21 27
cond (71)
    on left: 49 50, on right: 33 34 47 48
Expr (72)
    on left: 51 52, on right: 49 50
logOp (73)
    on left: 53 54, on right: 50
relExp (74)
    on left: 55 56 57 58 59 60, on right: 51
logExp (75)
    on left: 61 62, on right: 52
Extra (76)
    on left: 63, on right: 13 45 46 55 56 57 58 59 60 61 62 80
Type (77)
    on left: 64 65 66, on right: 11 12 16 17 18 38 39 40 41 42
VarList (78)
    on left: 67 68, on right: 11 41 43 67
E (79)
    on left: 69 70 71, on right: 50 55 56 57 58 59 60 61 62 63 69 70
    77
T (80)
    on left: 72 73 74, on right: 69 70 71 72 73
F (81)
    on left: 75 76 77, on right: 72 73 74
JumpStmt (82)
    on left: 78 79 80, on right: 22 28


State 0

    0 $accept: . PreProcessorDirectives $end

    HASH  shift, and go to state 1

    PreProcessorDirectives  go to state 2


State 1

    1 PreProcessorDirectives: HASH . INCLUDE LIBRARY Global

    INCLUDE  shift, and go to state 3


State 2

    0 $accept: PreProcessorDirectives . $end

    $end  shift, and go to state 4


State 3

    1 PreProcessorDirectives: HASH INCLUDE . LIBRARY Global

    LIBRARY  shift, and go to state 5


State 4

    0 $accept: PreProcessorDirectives $end .

    $default  accept


State 5

    1 PreProcessorDirectives: HASH INCLUDE LIBRARY . Global

    INT   shift, and go to state 6
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    Main                go to state 9
    Global              go to state 10
    GlobeDeclaration    go to state 11
    FunctionDefinition  go to state 12
    FunctionName        go to state 13
    Type                go to state 14


State 6

    2 Main: INT . MAIN OB CB CompoundStmt Function '$'
   64 Type: INT .

    MAIN  shift, and go to state 15

    $default  reduce using rule 64 (Type)


State 7

   65 Type: VOID .

    $default  reduce using rule 65 (Type)


State 8

   66 Type: CHAR .

    $default  reduce using rule 66 (Type)


State 9

   10 Global: Main .

    $default  reduce using rule 10 (Global)


State 10

    1 PreProcessorDirectives: HASH INCLUDE LIBRARY Global .

    $default  reduce using rule 1 (PreProcessorDirectives)


State 11

    9 Global: GlobeDeclaration . Global

    INT   shift, and go to state 6
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    Main                go to state 9
    Global              go to state 16
    GlobeDeclaration    go to state 11
    FunctionDefinition  go to state 12
    FunctionName        go to state 13
    Type                go to state 14


State 12

    8 Global: FunctionDefinition . Global

    INT   shift, and go to state 6
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    Main                go to state 9
    Global              go to state 17
    GlobeDeclaration    go to state 11
    FunctionDefinition  go to state 12
    FunctionName        go to state 13
    Type                go to state 14


State 13

   14 FunctionDefinition: FunctionName . OB CB SEMICOLON
   15                   | FunctionName . OB ParamsType CB SEMICOLON

    OB  shift, and go to state 18


State 14

   11 GlobeDeclaration: Type . VarList SEMICOLON
   12                 | Type . GlobeAssignExpr
   16 FunctionName: Type . Identifier

    ID  shift, and go to state 19

    Identifier       go to state 20
    GlobeAssignExpr  go to state 21
    VarList          go to state 22


State 15

    2 Main: INT MAIN . OB CB CompoundStmt Function '$'

    OB  shift, and go to state 23


State 16

    9 Global: GlobeDeclaration Global .

    $default  reduce using rule 9 (Global)


State 17

    8 Global: FunctionDefinition Global .

    $default  reduce using rule 8 (Global)


State 18

   14 FunctionDefinition: FunctionName OB . CB SEMICOLON
   15                   | FunctionName OB . ParamsType CB SEMICOLON

    INT   shift, and go to state 24
    CB    shift, and go to state 25
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    ParamsType  go to state 26
    Type        go to state 27


State 19

    3 Identifier: ID . Array

    '['  shift, and go to state 28

    $default  reduce using rule 6 (Array)

    Array  go to state 29


State 20

   13 GlobeAssignExpr: Identifier . EQUAL Extra SEMICOLON
   16 FunctionName: Type Identifier .
   68 VarList: Identifier .

    EQUAL  shift, and go to state 30

    OB        reduce using rule 16 (FunctionName)
    $default  reduce using rule 68 (VarList)


State 21

   12 GlobeDeclaration: Type GlobeAssignExpr .

    $default  reduce using rule 12 (GlobeDeclaration)


State 22

   11 GlobeDeclaration: Type VarList . SEMICOLON
   67 VarList: VarList . COMMA Call

    SEMICOLON  shift, and go to state 31
    COMMA      shift, and go to state 32


State 23

    2 Main: INT MAIN OB . CB CompoundStmt Function '$'

    CB  shift, and go to state 33


State 24

   64 Type: INT .

    $default  reduce using rule 64 (Type)


State 25

   14 FunctionDefinition: FunctionName OB CB . SEMICOLON

    SEMICOLON  shift, and go to state 34


State 26

   15 FunctionDefinition: FunctionName OB ParamsType . CB SEMICOLON
   17 ParamsType: ParamsType . COMMA Type

    CB     shift, and go to state 35
    COMMA  shift, and go to state 36


State 27

   18 ParamsType: Type .

    $default  reduce using rule 18 (ParamsType)


State 28

    4 Array: '[' . NUM ']'
    5      | '[' . ']'

    NUM  shift, and go to state 37
    ']'  shift, and go to state 38


State 29

    3 Identifier: ID Array .

    $default  reduce using rule 3 (Identifier)


State 30

   13 GlobeAssignExpr: Identifier EQUAL . Extra SEMICOLON

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    Extra  go to state 42
    E      go to state 43
    T      go to state 44
    F      go to state 45


State 31

   11 GlobeDeclaration: Type VarList SEMICOLON .

    $default  reduce using rule 11 (GlobeDeclaration)


State 32

   67 VarList: VarList COMMA . Call

    ID  shift, and go to state 46

    Call  go to state 47


State 33

    2 Main: INT MAIN OB CB . CompoundStmt Function '$'

    SO  shift, and go to state 48

    CompoundStmt  go to state 49


State 34

   14 FunctionDefinition: FunctionName OB CB SEMICOLON .

    $default  reduce using rule 14 (FunctionDefinition)


State 35

   15 FunctionDefinition: FunctionName OB ParamsType CB . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 36

   17 ParamsType: ParamsType COMMA . Type

    INT   shift, and go to state 24
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    Type  go to state 51


State 37

    4 Array: '[' NUM . ']'

    ']'  shift, and go to state 52


State 38

    5 Array: '[' ']' .

    $default  reduce using rule 5 (Array)


State 39

   77 F: OB . E CB

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 53
    T  go to state 44
    F  go to state 45


State 40

   76 F: NUM .

    $default  reduce using rule 76 (F)


State 41

   75 F: ID .

    $default  reduce using rule 75 (F)


State 42

   13 GlobeAssignExpr: Identifier EQUAL Extra . SEMICOLON

    SEMICOLON  shift, and go to state 54


State 43

   63 Extra: E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 63 (Extra)


State 44

   71 E: T .
   72 T: T . MUL F
   73  | T . DIV F

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    $default  reduce using rule 71 (E)


State 45

   74 T: F .

    $default  reduce using rule 74 (T)


State 46

   44 Call: ID .

    $default  reduce using rule 44 (Call)


State 47

   67 VarList: VarList COMMA Call .

    $default  reduce using rule 67 (VarList)


State 48

    7 CompoundStmt: SO . Stmt SC

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 69
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 49

    2 Main: INT MAIN OB CB CompoundStmt . Function '$'

    INT   shift, and go to state 24
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    $default  reduce using rule 37 (Function)

    FunctionName  go to state 78
    Function      go to state 79
    Type          go to state 80


State 50

   15 FunctionDefinition: FunctionName OB ParamsType CB SEMICOLON .

    $default  reduce using rule 15 (FunctionDefinition)


State 51

   17 ParamsType: ParamsType COMMA Type .

    $default  reduce using rule 17 (ParamsType)


State 52

    4 Array: '[' NUM ']' .

    $default  reduce using rule 4 (Array)


State 53

   69 E: E . ADD T
   70  | E . SUB T
   77 F: OB E . CB

    CB   shift, and go to state 81
    ADD  shift, and go to state 55
    SUB  shift, and go to state 56


State 54

   13 GlobeAssignExpr: Identifier EQUAL Extra SEMICOLON .

    $default  reduce using rule 13 (GlobeAssignExpr)


State 55

   69 E: E ADD . T

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    T  go to state 82
    F  go to state 45


State 56

   70 E: E SUB . T

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    T  go to state 83
    F  go to state 45


State 57

   72 T: T MUL . F

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    F  go to state 84


State 58

   73 T: T DIV . F

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    F  go to state 85


State 59

   32 Stmt: error . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 60

   47 SelectionStmt: IF . OB cond CB CompoundStmt
   48              | IF . OB cond CB CompoundStmt ELSE CompoundStmt

    OB  shift, and go to state 87


State 61

   34 Iterative: DO . CompoundStmt WHILE OB cond CB SEMICOLON

    SO  shift, and go to state 48

    CompoundStmt  go to state 88


State 62

   33 Iterative: WHILE . OB cond CB CompoundStmt

    OB  shift, and go to state 89


State 63

   78 JumpStmt: CONT . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 64

   79 JumpStmt: BRK . SEMICOLON

    SEMICOLON  shift, and go to state 91


State 65

   80 JumpStmt: RTRN . Extra SEMICOLON

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    Extra  go to state 92
    E      go to state 43
    T      go to state 44
    F      go to state 45


State 66

    3 Identifier: ID . Array
   44 Call: ID .

    '['  shift, and go to state 28

    OB        reduce using rule 44 (Call)
    $default  reduce using rule 6 (Array)

    Array  go to state 29


State 67

   45 AssignExpr: Identifier . EQUAL Extra COMMA AssignExpr
   46           | Identifier . EQUAL Extra SEMICOLON

    EQUAL  shift, and go to state 93


State 68

   24 Stmt: CompoundStmt .
   30     | CompoundStmt . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 24 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 94
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 69

    7 CompoundStmt: SO Stmt . SC

    SC  shift, and go to state 95


State 70

   31 Stmt: Iterative . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 96
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 71

   19 Stmt: Declaration .
   25     | Declaration . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 19 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 97
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 72

   23 Stmt: FunctionCall .
   29     | FunctionCall . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 23 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 98
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 73

   43 FunctionCall: Call . OB VarList CB SEMICOLON

    OB  shift, and go to state 99


State 74

   20 Stmt: AssignExpr .
   26     | AssignExpr . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 20 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 100
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 75

   21 Stmt: SelectionStmt .
   27     | SelectionStmt . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 21 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 101
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 76

   40 Declaration: Type . Identifier
   41            | Type . VarList SEMICOLON
   42            | Type . AssignExpr

    ID  shift, and go to state 19

    Identifier  go to state 102
    AssignExpr  go to state 103
    VarList     go to state 104


State 77

   22 Stmt: JumpStmt .
   28     | JumpStmt . Stmt

    error  shift, and go to state 59
    INT    shift, and go to state 24
    SO     shift, and go to state 48
    IF     shift, and go to state 60
    DO     shift, and go to state 61
    WHILE  shift, and go to state 62
    CONT   shift, and go to state 63
    BRK    shift, and go to state 64
    RTRN   shift, and go to state 65
    VOID   shift, and go to state 7
    CHAR   shift, and go to state 8
    ID     shift, and go to state 66

    SC  reduce using rule 22 (Stmt)

    Identifier     go to state 67
    CompoundStmt   go to state 68
    Stmt           go to state 105
    Iterative      go to state 70
    Declaration    go to state 71
    FunctionCall   go to state 72
    Call           go to state 73
    AssignExpr     go to state 74
    SelectionStmt  go to state 75
    Type           go to state 76
    JumpStmt       go to state 77


State 78

   35 Function: FunctionName . OB CB CompoundStmt Function
   36         | FunctionName . OB FunctionParams CB CompoundStmt Function

    OB  shift, and go to state 106


State 79

    2 Main: INT MAIN OB CB CompoundStmt Function . '$'

    '$'  shift, and go to state 107


State 80

   16 FunctionName: Type . Identifier

    ID  shift, and go to state 19

    Identifier  go to state 108


State 81

   77 F: OB E CB .

    $default  reduce using rule 77 (F)


State 82

   69 E: E ADD T .
   72 T: T . MUL F
   73  | T . DIV F

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    $default  reduce using rule 69 (E)


State 83

   70 E: E SUB T .
   72 T: T . MUL F
   73  | T . DIV F

    MUL  shift, and go to state 57
    DIV  shift, and go to state 58

    $default  reduce using rule 70 (E)


State 84

   72 T: T MUL F .

    $default  reduce using rule 72 (T)


State 85

   73 T: T DIV F .

    $default  reduce using rule 73 (T)


State 86

   32 Stmt: error SEMICOLON .

    $default  reduce using rule 32 (Stmt)


State 87

   47 SelectionStmt: IF OB . cond CB CompoundStmt
   48              | IF OB . cond CB CompoundStmt ELSE CompoundStmt

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    cond    go to state 109
    Expr    go to state 110
    relExp  go to state 111
    logExp  go to state 112
    Extra   go to state 113
    E       go to state 43
    T       go to state 44
    F       go to state 45


State 88

   34 Iterative: DO CompoundStmt . WHILE OB cond CB SEMICOLON

    WHILE  shift, and go to state 114


State 89

   33 Iterative: WHILE OB . cond CB CompoundStmt

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    cond    go to state 115
    Expr    go to state 110
    relExp  go to state 111
    logExp  go to state 112
    Extra   go to state 113
    E       go to state 43
    T       go to state 44
    F       go to state 45


State 90

   78 JumpStmt: CONT SEMICOLON .

    $default  reduce using rule 78 (JumpStmt)


State 91

   79 JumpStmt: BRK SEMICOLON .

    $default  reduce using rule 79 (JumpStmt)


State 92

   80 JumpStmt: RTRN Extra . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 93

   45 AssignExpr: Identifier EQUAL . Extra COMMA AssignExpr
   46           | Identifier EQUAL . Extra SEMICOLON

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    Extra  go to state 117
    E      go to state 43
    T      go to state 44
    F      go to state 45


State 94

   30 Stmt: CompoundStmt Stmt .

    $default  reduce using rule 30 (Stmt)


State 95

    7 CompoundStmt: SO Stmt SC .

    $default  reduce using rule 7 (CompoundStmt)


State 96

   31 Stmt: Iterative Stmt .

    $default  reduce using rule 31 (Stmt)


State 97

   25 Stmt: Declaration Stmt .

    $default  reduce using rule 25 (Stmt)


State 98

   29 Stmt: FunctionCall Stmt .

    $default  reduce using rule 29 (Stmt)


State 99

   43 FunctionCall: Call OB . VarList CB SEMICOLON

    ID  shift, and go to state 19

    Identifier  go to state 118
    VarList     go to state 119


State 100

   26 Stmt: AssignExpr Stmt .

    $default  reduce using rule 26 (Stmt)


State 101

   27 Stmt: SelectionStmt Stmt .

    $default  reduce using rule 27 (Stmt)


State 102

   40 Declaration: Type Identifier .
   45 AssignExpr: Identifier . EQUAL Extra COMMA AssignExpr
   46           | Identifier . EQUAL Extra SEMICOLON
   68 VarList: Identifier .

    EQUAL  shift, and go to state 93

    SEMICOLON  reduce using rule 68 (VarList)
    COMMA      reduce using rule 68 (VarList)
    $default   reduce using rule 40 (Declaration)


State 103

   42 Declaration: Type AssignExpr .

    $default  reduce using rule 42 (Declaration)


State 104

   41 Declaration: Type VarList . SEMICOLON
   67 VarList: VarList . COMMA Call

    SEMICOLON  shift, and go to state 120
    COMMA      shift, and go to state 32


State 105

   28 Stmt: JumpStmt Stmt .

    $default  reduce using rule 28 (Stmt)


State 106

   35 Function: FunctionName OB . CB CompoundStmt Function
   36         | FunctionName OB . FunctionParams CB CompoundStmt Function

    INT   shift, and go to state 24
    CB    shift, and go to state 121
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    FunctionParams  go to state 122
    Type            go to state 123


State 107

    2 Main: INT MAIN OB CB CompoundStmt Function '$' .

    $default  reduce using rule 2 (Main)


State 108

   16 FunctionName: Type Identifier .

    $default  reduce using rule 16 (FunctionName)


State 109

   47 SelectionStmt: IF OB cond . CB CompoundStmt
   48              | IF OB cond . CB CompoundStmt ELSE CompoundStmt

    CB  shift, and go to state 124


State 110

   49 cond: Expr .
   50     | Expr . logOp E

    BINARYOR   shift, and go to state 125
    BINARYAND  shift, and go to state 126

    $default  reduce using rule 49 (cond)

    logOp  go to state 127


State 111

   51 Expr: relExp .

    $default  reduce using rule 51 (Expr)


State 112

   52 Expr: logExp .

    $default  reduce using rule 52 (Expr)


State 113

   55 relExp: Extra . LT E
   56       | Extra . GT E
   57       | Extra . LTE E
   58       | Extra . GTE E
   59       | Extra . NE E
   60       | Extra . EQ E
   61 logExp: Extra . BINARYOR E
   62       | Extra . BINARYAND E

    BINARYOR   shift, and go to state 128
    BINARYAND  shift, and go to state 129
    LT         shift, and go to state 130
    GT         shift, and go to state 131
    LTE        shift, and go to state 132
    GTE        shift, and go to state 133
    NE         shift, and go to state 134
    EQ         shift, and go to state 135


State 114

   34 Iterative: DO CompoundStmt WHILE . OB cond CB SEMICOLON

    OB  shift, and go to state 136


State 115

   33 Iterative: WHILE OB cond . CB CompoundStmt

    CB  shift, and go to state 137


State 116

   80 JumpStmt: RTRN Extra SEMICOLON .

    $default  reduce using rule 80 (JumpStmt)


State 117

   45 AssignExpr: Identifier EQUAL Extra . COMMA AssignExpr
   46           | Identifier EQUAL Extra . SEMICOLON

    SEMICOLON  shift, and go to state 138
    COMMA      shift, and go to state 139


State 118

   68 VarList: Identifier .

    $default  reduce using rule 68 (VarList)


State 119

   43 FunctionCall: Call OB VarList . CB SEMICOLON
   67 VarList: VarList . COMMA Call

    CB     shift, and go to state 140
    COMMA  shift, and go to state 32


State 120

   41 Declaration: Type VarList SEMICOLON .

    $default  reduce using rule 41 (Declaration)


State 121

   35 Function: FunctionName OB CB . CompoundStmt Function

    SO  shift, and go to state 48

    CompoundStmt  go to state 141


State 122

   36 Function: FunctionName OB FunctionParams . CB CompoundStmt Function
   38 FunctionParams: FunctionParams . COMMA Type Identifier

    CB     shift, and go to state 142
    COMMA  shift, and go to state 143


State 123

   39 FunctionParams: Type . Identifier

    ID  shift, and go to state 19

    Identifier  go to state 144


State 124

   47 SelectionStmt: IF OB cond CB . CompoundStmt
   48              | IF OB cond CB . CompoundStmt ELSE CompoundStmt

    SO  shift, and go to state 48

    CompoundStmt  go to state 145


State 125

   54 logOp: BINARYOR .

    $default  reduce using rule 54 (logOp)


State 126

   53 logOp: BINARYAND .

    $default  reduce using rule 53 (logOp)


State 127

   50 cond: Expr logOp . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 146
    T  go to state 44
    F  go to state 45


State 128

   61 logExp: Extra BINARYOR . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 147
    T  go to state 44
    F  go to state 45


State 129

   62 logExp: Extra BINARYAND . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 148
    T  go to state 44
    F  go to state 45


State 130

   55 relExp: Extra LT . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 149
    T  go to state 44
    F  go to state 45


State 131

   56 relExp: Extra GT . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 150
    T  go to state 44
    F  go to state 45


State 132

   57 relExp: Extra LTE . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 151
    T  go to state 44
    F  go to state 45


State 133

   58 relExp: Extra GTE . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 152
    T  go to state 44
    F  go to state 45


State 134

   59 relExp: Extra NE . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 153
    T  go to state 44
    F  go to state 45


State 135

   60 relExp: Extra EQ . E

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    E  go to state 154
    T  go to state 44
    F  go to state 45


State 136

   34 Iterative: DO CompoundStmt WHILE OB . cond CB SEMICOLON

    OB   shift, and go to state 39
    NUM  shift, and go to state 40
    ID   shift, and go to state 41

    cond    go to state 155
    Expr    go to state 110
    relExp  go to state 111
    logExp  go to state 112
    Extra   go to state 113
    E       go to state 43
    T       go to state 44
    F       go to state 45


State 137

   33 Iterative: WHILE OB cond CB . CompoundStmt

    SO  shift, and go to state 48

    CompoundStmt  go to state 156


State 138

   46 AssignExpr: Identifier EQUAL Extra SEMICOLON .

    $default  reduce using rule 46 (AssignExpr)


State 139

   45 AssignExpr: Identifier EQUAL Extra COMMA . AssignExpr

    ID  shift, and go to state 19

    Identifier  go to state 67
    AssignExpr  go to state 157


State 140

   43 FunctionCall: Call OB VarList CB . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 141

   35 Function: FunctionName OB CB CompoundStmt . Function

    INT   shift, and go to state 24
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    $default  reduce using rule 37 (Function)

    FunctionName  go to state 78
    Function      go to state 159
    Type          go to state 80


State 142

   36 Function: FunctionName OB FunctionParams CB . CompoundStmt Function

    SO  shift, and go to state 48

    CompoundStmt  go to state 160


State 143

   38 FunctionParams: FunctionParams COMMA . Type Identifier

    INT   shift, and go to state 24
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    Type  go to state 161


State 144

   39 FunctionParams: Type Identifier .

    $default  reduce using rule 39 (FunctionParams)


State 145

   47 SelectionStmt: IF OB cond CB CompoundStmt .
   48              | IF OB cond CB CompoundStmt . ELSE CompoundStmt

    ELSE  shift, and go to state 162

    $default  reduce using rule 47 (SelectionStmt)


State 146

   50 cond: Expr logOp E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 50 (cond)


State 147

   61 logExp: Extra BINARYOR E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 61 (logExp)


State 148

   62 logExp: Extra BINARYAND E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 62 (logExp)


State 149

   55 relExp: Extra LT E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 55 (relExp)


State 150

   56 relExp: Extra GT E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 56 (relExp)


State 151

   57 relExp: Extra LTE E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 57 (relExp)


State 152

   58 relExp: Extra GTE E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 58 (relExp)


State 153

   59 relExp: Extra NE E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 59 (relExp)


State 154

   60 relExp: Extra EQ E .
   69 E: E . ADD T
   70  | E . SUB T

    ADD  shift, and go to state 55
    SUB  shift, and go to state 56

    $default  reduce using rule 60 (relExp)


State 155

   34 Iterative: DO CompoundStmt WHILE OB cond . CB SEMICOLON

    CB  shift, and go to state 163


State 156

   33 Iterative: WHILE OB cond CB CompoundStmt .

    $default  reduce using rule 33 (Iterative)


State 157

   45 AssignExpr: Identifier EQUAL Extra COMMA AssignExpr .

    $default  reduce using rule 45 (AssignExpr)


State 158

   43 FunctionCall: Call OB VarList CB SEMICOLON .

    $default  reduce using rule 43 (FunctionCall)


State 159

   35 Function: FunctionName OB CB CompoundStmt Function .

    $default  reduce using rule 35 (Function)


State 160

   36 Function: FunctionName OB FunctionParams CB CompoundStmt . Function

    INT   shift, and go to state 24
    VOID  shift, and go to state 7
    CHAR  shift, and go to state 8

    $default  reduce using rule 37 (Function)

    FunctionName  go to state 78
    Function      go to state 164
    Type          go to state 80


State 161

   38 FunctionParams: FunctionParams COMMA Type . Identifier

    ID  shift, and go to state 19

    Identifier  go to state 165


State 162

   48 SelectionStmt: IF OB cond CB CompoundStmt ELSE . CompoundStmt

    SO  shift, and go to state 48

    CompoundStmt  go to state 166


State 163

   34 Iterative: DO CompoundStmt WHILE OB cond CB . SEMICOLON

    SEMICOLON  shift, and go to state 167


State 164

   36 Function: FunctionName OB FunctionParams CB CompoundStmt Function .

    $default  reduce using rule 36 (Function)


State 165

   38 FunctionParams: FunctionParams COMMA Type Identifier .

    $default  reduce using rule 38 (FunctionParams)


State 166

   48 SelectionStmt: IF OB cond CB CompoundStmt ELSE CompoundStmt .

    $default  reduce using rule 48 (SelectionStmt)


State 167

   34 Iterative: DO CompoundStmt WHILE OB cond CB SEMICOLON .

    $default  reduce using rule 34 (Iterative)
